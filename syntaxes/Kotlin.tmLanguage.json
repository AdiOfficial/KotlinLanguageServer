{
	"name": "Kotlin",
	"scopeName": "source.kotlin",
	"patterns": [
		{
			"include": "#import"
		},
		{
			"include": "#package"
		},
		{
			"include": "#code"
		}
	],
	"repository": {
		"import": {
			"begin": "\\b(import)\\b\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.import.java"
				}
			},
			"end": "\\s*(;)|\\s*$\n?",
			"name": "meta.import.java",
			"contentName": "entity.name.package.java",
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"match": "(?<=\\.)\\s*\\.|\\.(?=\\s*;)",
					"name": "invalid.illegal.character_not_allowed_here.java"
				},
				{
					"match": "(?<!\\.)\\s*\\*",
					"name": "invalid.illegal.character_not_allowed_here.java"
				},
				{
					"match": "(?<!_)_(?=\\s*(\\.|;))|\\b\\d+|-+",
					"name": "invalid.illegal.character_not_allowed_here.java"
				},
				{
					"match": "(?x)\\b(?<!\\$)\n(abstract|assert|boolean|break|byte|case|catch|char|class|\nconst|continue|default|do|double|else|enum|extends|final|\nfinally|float|for|goto|if|implements|import|instanceof|int|\ninterface|long|native|new|package|private|protected|public|\nreturn|short|static|strictfp|super|switch|syncronized|this|\nthrow|throws|transient|try|void|volatile|while|\ntrue|false|null)\\b",
					"name": "invalid.illegal.character_not_allowed_here.java"
				},
				{
					"match": "\\*",
					"name": "variable.language.wildcard.java"
				}
			]
		},
		"package": {
			"begin": "\\b(package)\\b\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.package.java"
				}
			},
			"end": "\\s*(;)|\\s*$\n?",
			"name": "meta.package.java",
			"contentName": "entity.name.package.java",
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"match": "(?<=\\.)\\s*\\.|\\.(?=\\s*;)",
					"name": "invalid.illegal.character_not_allowed_here.java"
				},
				{
					"match": "(?<!_)_(?=\\s*(\\.|;))|\\b\\d+|-+",
					"name": "invalid.illegal.character_not_allowed_here.java"
				},
				{
					"match": "(?x)\\b(?<!\\$)\n(abstract|assert|boolean|break|byte|case|catch|char|class|\nconst|continue|default|do|double|else|enum|extends|final|\nfinally|float|for|goto|if|implements|import|instanceof|int|\ninterface|long|native|new|package|private|protected|public|\nreturn|short|static|strictfp|super|switch|syncronized|this|\nthrow|throws|transient|try|void|volatile|while|\ntrue|false|null)\\b",
					"name": "invalid.illegal.character_not_allowed_here.java"
				}
			]
		},
		"code": {
			"patterns": [
				{
					"include": "#annotations"
				},
				{
					"include": "#class-declaration"
				},
				{
					"include": "#object-declaration"
				}
			]
		},
		"annotations": {
			"patterns": [
				{
					"include": "#annotation"
				},
				{
					"include": "#annotation-with-site"
				},
				{
					"include": "#annotation-with-list"
				}
			]
		},
		"annotation": {
			"patterns": [
				{
					"include": "#annotation-simple"
				},
				{
					"include": "#annotation-call"
				}
			]
		},
		"annotation-simple": {
			"match": "(@[\\w\\.]+)\\b(?!:|\\[|\\()",
			"captures": {
				"1": {
					"name": "storage.type.annotation.java"
				}
			},
			"name": "meta.declaration.annotation.java"
		},
		"annotation-call": {
			"begin": "(@[\\w\\.]+)(\\()",
			"beginCaptures": {
				"1": {
					"name": "storage.type.annotation.java"
				}
			},
			"end": "\\)",
			"name": "meta.declaration.annotation.java",
			"patterns": [
				{
					"include": "#annotation-args"
				}
			]
		},
		"annotation-with-site": {
			"patterns": [
				{
					"include": "#annotation-with-site-simple"
				},
				{
					"include": "#annotation-with-site-call"
				}
			]
		},
		"annotation-with-site-simple": {
			"match": "(@\\w+):\\s*([\\w\\.]+)\\b(?!:|\\[|\\()",
			"captures": {
				"1": {
					"name": "storage.type.annotation.java"
				},
				"2": {
					"name": "storage.type.annotation.java"
				}
			},
			"name": "meta.declaration.annotation.java"
		},
		"annotation-with-site-call": {
			"begin": "(@\\w+):\\s*([\\w\\.]+)(\\()",
			"beginCaptures": {
				"1": {
					"name": "storage.type.annotation.java"
				},
				"2": {
					"name": "storage.type.annotation.java"
				}
			},
			"end": "\\)",
			"name": "meta.declaration.annotation.java",
			"patterns": [
				{
					"include": "#annotation-args"
				}
			]
		},
		"annotation-with-list": {
			"begin": "(@\\w+):\\s*(\\[)",
			"beginCaptures": {
				"1": {
					"name": "storage.type.annotation.java"
				}
			},
			"end": "\\]",
			"name": "meta.declaration.annotation.java",
			"patterns": [
				{
					"include": "#unescaped-annotation"
				}
			]
		},
		"unescaped-annotation": {
			"patterns": [
				{
					"include": "#unescaped-annotation-simple"
				},
				{
					"include": "#unescaped-annotation-call"
				}
			]
		},
		"unescaped-annotation-simple": {
			"match": "([\\w\\.]+)\\b(?!:|\\[|\\()",
			"captures": {
				"1": {
					"name": "storage.type.annotation.java"
				}
			},
			"name": "meta.declaration.annotation.java"
		},
		"unescaped-annotation-call": {
			"begin": "([\\w\\.]+)(\\()",
			"beginCaptures": {
				"1": {
					"name": "storage.type.annotation.java"
				}
			},
			"end": "\\)",
			"name": "meta.declaration.annotation.java",
			"patterns": [
				{
					"include": "#annotation-args"
				}
			]
		},
		"annotation-args": {
			"patterns": [
				{
					"include": "#annotation-key"
				},
				{
					"include": "#code"
				}
			]
		},
		"annotation-key": {
			"match": "(\\w*)\\s*(=)",
			"captures": {
				"1": {
					"name": "constant.other.key.java"
				},
				"2": {
					"name": "keyword.operator.assignment.java"
				}
			}
		},
		"class-declaration": {
			"patterns": [
				{
					"include": "#class-simple"
				},
				{
					"include": "#class-generic"
				}
			]
		},
		"class-simple": {
			"match": "\\b(class|interface)\\s+(\\w+)\\b\\s*(?!<)",
			"captures": {
				"1": {
					"name": "keyword.other.class.java"
				},
				"2": {
					"name": "entity.name.type.class.java"
				}
			}
		},
		"class-generic": {
			"begin": "\\b(class|interface)\\s+(\\w+)\\b\\s*<",
			"end": ">",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.class.java"
				},
				"2": {
					"name": "entity.name.type.class.java"
				}
			},
			"patterns": [
				{
					"include": "#type-parameter"
				}
			]
		},
		"object-declaration": {
			"match": "\\b(object)\\s+(\\w+)\\b",
			"captures": {
				"1": {
					"name": "keyword.other.object.java"
				},
				"2": {
					"name": "entity.name.type.class.java"
				}
			}
		},
		"type-parameter": {
			"patterns": [
				{
					"match": "\\b[A-Z]\\w*\\b",
					"name": "storage.type.java"
				},
				{
					"match": "in|out",
					"name": "storage.modifier.java"
				}
			]
		}
	}
}